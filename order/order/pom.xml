<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.java06</groupId>
  <artifactId>order</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging><!--打包方式，默认是jar，web应用打包配置为war-->

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><!--设置字符集-->
    <fastjson.version>1.2.56</fastjson.version>
    <javax.version>8.0</javax.version>
  </properties>
  <!--配置项目依赖jar-->
  <dependencies>
    <!--配置jdk版本-->
    <dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-api</artifactId>
      <version>${javax.version}</version>
    </dependency>
    <!--配置JSTL(包含了jsp和servlet的包)-->
    <dependency>
      <groupId>org.glassfish.web</groupId>
      <artifactId>javax.servlet.jsp.jstl</artifactId>
      <version>1.2.2</version>
    </dependency>
    <!--Java通用工具包-->
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.6</version>
    </dependency>
    <!--Java文件处理包-->
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.3.1</version>
    </dependency>
    <!--Mysql数据库连接包-->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.30</version><!--5.1.30对mybatis的逆向工程支持度最高-->
    </dependency>

    <!--1.dbcp.BasicDataSource-->
    <!--2.c3p0-->
    <!--3.druid数据源管理包--><!--finnal-->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
      <version>1.0.13</version>
    </dependency>
    <!--json解析包-->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>${fastjson.version}</version>
    </dependency>
    <!--日志记录包（log4j的扩展，使用这个包，mybatis和spring都可以打印出日志。）-->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.12</version>
    </dependency>

    <!--spring配置开始-->
    <!--Spring依赖的json解析包-->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.5.1</version>
    </dependency>
    <!--aop支持包(不配置项目也是可以启动和运行，但是事务会失效)-->
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>1.8.2</version>
    </dependency>
    <!--Spring基础依赖包，其他相关依赖会自动下载(aop,core,web,mvc)-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>4.1.6.RELEASE</version>
    </dependency>
    <!--spring-orm包，数据库相关依赖会自动下载(dao)-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
      <version>4.1.6.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>4.1.6.RELEASE</version>
    </dependency>
    <!--spring配置结束-->
    <!--mybatis配置开始-->
    <!--mybatis核心包-->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
      <version>3.2.8</version>
    </dependency>
    <!--mybatis整合包-->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis-spring</artifactId>
      <version>1.2.2</version>
    </dependency><!--SpringBoot-->
    <!--mybatis分页包-->
    <dependency>
      <groupId>com.github.pagehelper</groupId>
      <artifactId>pagehelper</artifactId>
      <version>4.1.6</version>
    </dependency>
    <!--mybatis配置结束-->
  </dependencies>

  <build>
    <finalName>order</finalName>
    <!--管理配置文件-->
    <!--如果使用myeclipse配置maven项目时，不需要这个步骤。-->
    <!--idea有可能会出现不识别xml文件的情况-->
    <resources>
      <resource>
        <directory>src/main/java</directory><!--指定扫描路径-->
        <includes>
          <include>**/*.xml</include><!--配置要被扫描的文件-->
        </includes>
        <filtering>true</filtering><!--强制执行-->
      </resource>
    </resources>
    <!--插件管理-->
    <plugins>
      <!--配置打包时使用的jdk版本-->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <!--设置单独打包war-->
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
      <!--mybatis逆向工程插件-->
      <plugin>
        <groupId>org.mybatis.generator</groupId>
        <artifactId>mybatis-generator-maven-plugin</artifactId>
        <version>1.3.2</version>
        <configuration><!--多次执行逆向工程，不会覆盖代码-->
          <verbose>false</verbose>
          <overwrite>false</overwrite>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
